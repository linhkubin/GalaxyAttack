{"version":3,"sources":["assets\\_Game\\Script\\Bullet.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAElF,mDAA8C;AAE9C,gDAA2C;AAC3C,gDAAyD;AAEnD,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAoC,0BAAU;IAA9C;QAAA,qEAqCC;QAlCW,WAAK,GAAW,IAAI,CAAC;QACrB,YAAM,GAAW,CAAC,CAAC;;IAiC/B,CAAC;IA/BU,uBAAM,GAAb,UAAc,MAAc;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,uBAAM,GAAN,UAAO,EAAU;QACb,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtD,IAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEhD,kEAAkE;QAClE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAE9B,iCAAiC;QACjC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,EAAE;YAC7B,6CAA6C;YAC7C,oBAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC5B;IACL,CAAC;IAED,mCAAmC;IACnC,iCAAgB,GAAhB,UAAiB,KAAkB,EAAE,IAAiB;QAClD,gEAAgE;QAChE,qCAAqC;QAErC,oCAAoC;QACpC,8DAA8D;QAC9D,wBAAc,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACtD,oBAAU,CAAC,KAAK,CAAC,qBAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;QACnE,oBAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI;IACR,CAAC;IAhCD;QADC,QAAQ;yCACoB;IAHZ,MAAM;QAD1B,OAAO;OACa,MAAM,CAqC1B;IAAD,aAAC;CArCD,AAqCC,CArCmC,oBAAU,GAqC7C;kBArCoB,MAAM","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport CacheComponent from \"./CacheComponent\";\r\nimport Character from \"./Character\";\r\nimport PoolMember from \"./Pool/PoolMember\";\r\nimport SimplePool, { PoolType } from \"./Pool/SimplePool\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Bullet extends PoolMember {\r\n\r\n    @property\r\n    private speed: number = 2000;\r\n    private damage: number = 4;\r\n\r\n    public onInit(damage: number) {\r\n        this.damage = damage;\r\n    }\r\n\r\n    update(dt: number) {\r\n        const velocity = this.node.up.mul(dt).mul(this.speed);\r\n        const newPos = this.node.position.add(velocity);\r\n\r\n        // move bullet forward with info of spawn point (pivot & rotation)\r\n        this.node.setPosition(newPos);\r\n\r\n        // despawn bullet if out of bound\r\n        if (this.node.position.y >= 950) {\r\n            // NodePool.getInstance().putNode(this.node);\r\n            SimplePool.despawn(this);\r\n        }\r\n    }\r\n\r\n    // Despawn bullet if col with enemy\r\n    onCollisionEnter(other: cc.Collider, self: cc.Collider) {\r\n        //đoạn này k cần so sánh group name vì đã chia group contact rồi\r\n        // if (other.node.group == 'enemy') {\r\n\r\n        //cache component để tối ưu game hơn\r\n        //-> cái này dùng cho game lớn hơn chứ playable chắc k cần lắm\r\n        CacheComponent.getCharacter(other).onHit(this.damage);\r\n        SimplePool.spawn(PoolType.VFX_Spark, this.node.getWorldPosition());\r\n        SimplePool.despawn(this);\r\n        // }\r\n    }\r\n\r\n}\r\n"]}