{"version":3,"sources":["assets\\_Game\\Script\\Pool\\SimplePool.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport PoolMember from \"./PoolMember\";\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nexport enum PoolType {\r\n    None = 0,\r\n    Bullet_1 = 1, \r\n    Bullet_2 = 2,\r\n    Enemy_1 = 10,\r\n    Enemy_2 = 11,\r\n    VFX_Explore = 12,\r\n    VFX_Spark  = 13,\r\n    Booster  = 14,\r\n}\r\n\r\n@ccclass\r\nexport default class SimplePool {\r\n\r\n    //trong scene sẽ cần tạo một node và add poolcontrol vào\r\n    //list pool control được dùng để khởi tạo số lượng item tương ứng\r\n    //prefab nào muốn dùng pool sẽ phải kế thừa poolmember\r\n    //định nghĩa item đó bằng pooltype\r\n\r\n    private static link: Map<PoolType, Pool> = new Map<PoolType, Pool>;\r\n\r\n    //getter\r\n    static isHasPool(poolType : PoolType): boolean {\r\n        return this.link.has(poolType);\r\n    }\r\n\r\n    //setter\r\n    static newPool(poolType : PoolType, pool: Pool): void {\r\n        this.link.set(poolType, pool);\r\n    }\r\n    \r\n    //setter\r\n    static getPool(poolType : PoolType): Pool {\r\n        return this.link.get(poolType);\r\n    }\r\n\r\n    public static preload(prefab: PoolMember, parentNode: cc.Node, amount: number) {\r\n        \r\n        let pool = new Pool(prefab, parentNode, amount);\r\n        if(!this.isHasPool(pool.poolType)){\r\n            this.newPool(pool.poolType, pool);\r\n        }\r\n    }\r\n\r\n    static spawn(nodeType: PoolType, pos: cc.Vec3, angle: number = 0): PoolMember {\r\n        console.log(nodeType);\r\n        if(!this.isHasPool(nodeType)) console.error(\" NEED PRELOAD POOL : \" + nodeType + \"!!!\");\r\n        return this.getPool(nodeType).spawn(pos, angle);\r\n    }\r\n\r\n    static spawnT<T>(nodeType: PoolType, pos: cc.Vec3, angle: number): T {\r\n        return this.spawn(nodeType, pos, angle) as T;\r\n    }\r\n\r\n    static despawn(clone: PoolMember) {\r\n        this.getPool(clone.poolType).despawn(clone);\r\n    }\r\n\r\n    //TODO: lam not sau\r\n    static collect(nodeType: PoolType) {\r\n        this.getPool(nodeType).collect();\r\n    }\r\n\r\n    static collectAll() {\r\n\r\n    }\r\n}\r\n\r\n\r\nclass Pool {\r\n\r\n    private parentNode: cc.Node;\r\n    private prefab: PoolMember;\r\n    private list: PoolMember[] = [];\r\n\r\n    public get poolType(): PoolType{\r\n        return this.prefab.poolType;\r\n    }\r\n\r\n    constructor(prefab: PoolMember, parentNode: cc.Node, amount: number) {\r\n        this.preload(prefab, parentNode, amount);\r\n    }\r\n\r\n    public preload(prefab: PoolMember, parentNode: cc.Node, amount: number) {\r\n        this.prefab = cc.instantiate(prefab).getComponent(PoolMember)\r\n        this.parentNode = parentNode;\r\n\r\n        for (let i = 0; i < amount; i++) {\r\n\r\n            let clone = cc.instantiate(this.prefab.node).getComponent(PoolMember);\r\n            clone.node.active = false;\r\n            this.parentNode.addChild(clone.node);\r\n\r\n            this.list.push(clone);\r\n        }\r\n    }\r\n\r\n    public spawn(pos: cc.Vec3, angle: number): PoolMember {\r\n        let clone = null;\r\n        if (this.list.length > 0) {\r\n            clone = this.list.shift();\r\n        } else {\r\n            clone = cc.instantiate(this.prefab.node).getComponent(PoolMember);\r\n            this.parentNode.addChild(clone.node);\r\n        }\r\n\r\n        clone.node.setWorldPosition(pos);\r\n        clone.node.angle = angle;\r\n        clone.node.active = true;\r\n\r\n        return clone;\r\n    }\r\n\r\n    public despawn(clone: PoolMember) {\r\n        if(clone.node.active){\r\n            clone.node.active = false;\r\n            this.list.push(clone);\r\n        }\r\n\r\n    }\r\n\r\n    collect() {\r\n    }\r\n\r\n}"]}