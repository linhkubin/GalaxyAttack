{"version":3,"sources":["assets\\_Game\\Script\\PowerUp.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAElF,uDAAkD;AAClD,gDAA2C;AAC3C,gDAA2C;AAErC,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAqC,2BAAU;IAA/C;QAAA,qEA0DC;QAxDG,6HAA6H;QACrH,WAAK,GAAW,GAAG,CAAC;QACpB,UAAI,GAAW,CAAC,CAAC;QACjB,eAAS,GAAW,EAAE,CAAC;;IAqDnC,CAAC;IAnDG,0BAAQ,GAAR;QACI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAClB,CAAC;IAED,wBAAM,GAAN,UAAO,EAAE;QAEL,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE;YACf,0EAA0E;YAC1E,IAAM,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;YAE3E,wDAAwD;YACxD,IAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3C,IAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC;YACvD,IAAM,OAAO,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjD,IAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAE/C,sBAAsB;YACtB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAE9B,2DAA2D;YAC3D,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;SACnB;aACI;YACD,iBAAiB;YACjB,IAAM,SAAS,GAAG,sBAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YAEtD,qBAAqB;YACrB,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YAEpC,gDAAgD;YAChD,IAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC;YAC/C,IAAM,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;YAEtD,kBAAkB;YAClB,IAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;YAE1C,sCAAsC;YACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAE5C,4EAA4E;YAC5E,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,EAAE;gBAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;aACpB;SACJ;IACL,CAAC;IAED,2BAAS,GAAT;QACI,sBAAY,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QAClC,oBAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAxDgB,OAAO;QAD3B,OAAO;OACa,OAAO,CA0D3B;IAAD,cAAC;CA1DD,AA0DC,CA1DoC,oBAAU,GA0D9C;kBA1DoB,OAAO","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport LevelManager from \"./Manager/LevelManager\";\r\nimport PoolMember from \"./Pool/PoolMember\";\r\nimport SimplePool from \"./Pool/SimplePool\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PowerUp extends PoolMember {\r\n\r\n    //script này copy của Khánh cho nhanh, mà hình như ô Khánh này copy của ChatGPT hay sao mà tự dưng nhìn comment chuẩn chỉ thế\r\n    private speed: number = 500;\r\n    private time: number = 0;\r\n    private threshold: number = 20;\r\n\r\n    onEnable() {\r\n        this.time = 1;\r\n    }\r\n    \r\n    update(dt) {\r\n\r\n        if (this.time > 0) {\r\n            // calculate pivot of boost: when active is move down to end screen height\r\n            const direction = cc.v2(0, -1).rotateSelf(this.node.angle * Math.PI / 180);\r\n\r\n            // add info with deltatime to boost interact with player\r\n            const velocity = direction.mul(this.speed);\r\n            const delta = velocity.mul(cc.director.getDeltaTime());\r\n            const v3Delta = new cc.Vec3(delta.x, delta.y, 0);\r\n            const newPos = this.node.position.add(v3Delta);\r\n\r\n            // move down the boost\r\n            this.node.setPosition(newPos);\r\n\r\n            // after time move on screen, boost will move toward player\r\n            this.time -= dt;\r\n        }\r\n        else {\r\n            //get info player\r\n            const playerPos = LevelManager.Ins.ship.node.position;\r\n\r\n            //get info this boost\r\n            const boostPos = this.node.position;\r\n\r\n            // calculate distance btw this boost with player\r\n            const distance = playerPos.sub(boostPos).mag();\r\n            const direction = playerPos.sub(boostPos).normalize();\r\n\r\n            // movement action\r\n            const movement = direction.mul(2000 * dt);\r\n\r\n            // move this boost towards player node\r\n            this.node.position = boostPos.add(movement);\r\n\r\n            // checking if distance btw this boost with player = 0, it will despawn self\r\n            if (distance < this.threshold) {\r\n                this.onDespawn();\r\n            }\r\n        }\r\n    }\r\n\r\n    onDespawn() {\r\n        LevelManager.Ins.ship.onPowerUp();\r\n        SimplePool.despawn(this);\r\n    }\r\n\r\n}\r\n"]}