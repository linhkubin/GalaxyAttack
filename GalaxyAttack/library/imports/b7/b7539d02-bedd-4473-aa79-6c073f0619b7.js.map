{"version":3,"sources":["assets\\_Game\\Script\\Manager\\SoundManager.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;;AAE5E,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAE1C,IAAY,SAIX;AAJD,WAAY,SAAS;IACjB,mDAAa,CAAA;IACb,uDAAe,CAAA;IACf,qDAAc,CAAA;AAClB,CAAC,EAJW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAIpB;AAID;IAA0C,gCAAY;IAAtD;QAAA,qEAgCC;QApBE,sCAAsC;QAGrC,WAAK,GAAmB,EAAE,CAAC;QAEnB,YAAM,GAAqB,EAAE,CAAC;;IAe1C,CAAC;qBAhCoB,YAAY;IAI9B,sBAAkB,mBAAG;aAArB;YAEG,OAAO,cAAY,CAAC,GAAG,CAAC;QAC3B,CAAC;;;OAAA;IAES,6BAAM,GAAhB;QACI,cAAY,CAAC,GAAG,GAAG,IAAI,CAAC;IAC5B,CAAC;IAQU,4BAAK,GAAf;QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YACvC,IAAI,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;YACtD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B;IACL,CAAC;IAEM,+BAAQ,GAAf,UAAgB,IAAe;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;;IAhBD;QADC,QAAQ,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;+CACE;IAfV,YAAY;QADhC,OAAO;OACa,YAAY,CAgChC;IAAD,mBAAC;CAhCD,AAgCC,CAhCyC,EAAE,CAAC,SAAS,GAgCrD;kBAhCoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nexport enum AudioType {\r\n    FX_Bullet = 0,\r\n    FX_EnemyDie = 1,\r\n    FX_Booster = 2,\r\n}\r\n\r\n\r\n@ccclass\r\nexport default class SoundManager extends cc.Component {\r\n\r\n   // singleton\r\n   private static ins : SoundManager;\r\n   public static get Ins() : SoundManager\r\n   {\r\n      return SoundManager.ins;\r\n   }\r\n\r\n   protected onLoad(): void {\r\n       SoundManager.ins = this;\r\n   }\r\n   //------------------------------------\r\n\r\n    @property([cc.AudioClip])\r\n    clips: cc.AudioClip[] = [];\r\n        \r\n    private audies: cc.AudioSource[] = [];\r\n\r\n    protected start(): void {\r\n        for (let i = 0; i < this.clips.length; i++){\r\n            let node = new cc.Node().addComponent(cc.AudioSource);\r\n            node.clip = this.clips[i];\r\n            this.audies.push(node);\r\n        }\r\n    }\r\n\r\n    public PlayClip(type: AudioType): void {\r\n        console.log(type);\r\n        console.log(this.audies.length);\r\n        this.audies[type].play();\r\n    }\r\n}\r\n"]}