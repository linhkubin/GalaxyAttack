{"version":3,"sources":["assets\\_Game\\Script\\LevelManager.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAIlF,gDAAyD;AAEnD,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAA0C,gCAAY;IAAtD;QAAA,qEA4CC;QAhCE,EAAE;QACM,UAAI,GAAgB,EAAE,CAAC;QAGxB,aAAO,GAAc,EAAE,CAAC;;IA4BlC,CAAC;qBA5CoB,YAAY;IAI9B,sBAAkB,mBAAG;aAArB;YAEG,OAAO,cAAY,CAAC,GAAG,CAAC;QAC3B,CAAC;;;OAAA;IAES,6BAAM,GAAhB;QACG,cAAY,CAAC,GAAG,GAAG,IAAI,CAAC;IAC3B,CAAC;IAOS,4BAAK,GAAf;QACG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,CAAC,GAAG,oBAAU,CAAC,MAAM,CAAQ,qBAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpH,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;YACtD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;SACf;IACJ,CAAC;IAEM,kCAAW,GAAlB,UAAmB,KAAc;IAEjC,CAAC;IAEM,mCAAY,GAAnB,UAAoB,CAAY;QAE7B,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC7B;QACD,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE/B,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,EAAC;YACtB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACtB;IACJ,CAAC;;IA1BD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;iDACa;IAhBb,YAAY;QADhC,OAAO;OACa,YAAY,CA4ChC;IAAD,mBAAC;CA5CD,AA4CC,CA5CyC,EAAE,CAAC,SAAS,GA4CrD;kBA5CoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Character from \"./Character\";\r\nimport Enemy from \"./Enemy\";\r\nimport SimplePool, { PoolType } from \"./Pool/SimplePool\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LevelManager extends cc.Component {\r\n\r\n   // singleton\r\n   private static ins : LevelManager;\r\n   public static get Ins() : LevelManager\r\n   {\r\n      return LevelManager.ins;\r\n   }\r\n\r\n   protected onLoad(): void {\r\n      LevelManager.ins = this;\r\n   }\r\n   //\r\n   private list: Character[] = [];\r\n\r\n   @property(cc.Node)\r\n   public stage_1: cc.Node[] = [];\r\n   \r\n   protected start(): void {\r\n      for (let i = 0; i < this.stage_1.length; i++) {\r\n         let e = SimplePool.spawnT<Enemy>(PoolType.Enemy_1, this.stage_1[i].getWorldPosition().add(cc.Vec3.UP.mul(1000)), 0);\r\n         e.moveTo(this.stage_1[i].getWorldPosition(), 1, true);\r\n         this.list.push(e);\r\n         e.onInit(10);\r\n      }\r\n   }\r\n\r\n   public onLoadStage(stage : number): void {\r\n\r\n   }\r\n\r\n   public onEnemyDeath(c: Character): void{\r\n\r\n      let index = this.list.indexOf(c);\r\n      if (index != -1) {\r\n         this.list.splice(index, 1);\r\n      }\r\n      console.log( this.list.length);\r\n\r\n      if(this.list.length == 0){\r\n         console.log(\"Done\");\r\n      }\r\n   }\r\n\r\n}\r\n"]}