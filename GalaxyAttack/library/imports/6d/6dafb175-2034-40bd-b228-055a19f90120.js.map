{"version":3,"sources":["assets\\_Game\\Script\\Manager\\LevelManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Character from \"../Character\";\r\nimport Enemy from \"../Enemy\";\r\nimport SimplePool, { PoolType } from \"../Pool/SimplePool\";\r\nimport Ship from \"../Ship\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LevelManager extends cc.Component {\r\n\r\n   // singleton\r\n   private static ins : LevelManager;\r\n   public static get Ins() : LevelManager\r\n   {\r\n      return LevelManager.ins;\r\n   }\r\n\r\n   protected onLoad(): void {\r\n      LevelManager.ins = this;\r\n   }\r\n   //------------------------------------\r\n\r\n   //Level Manager sẽ điều khiển luồng chính trong game\r\n\r\n   @property(Ship)\r\n   public ship: Ship = null;\r\n   \r\n   @property(cc.Node)\r\n   public stage_1: cc.Node[] = [];\r\n   \r\n   @property(cc.Node)\r\n   public stage_2: cc.Node[] = [];\r\n\r\n   private list: Character[] = [];\r\n   private isBooster: boolean;\r\n   private stage: number = 0;\r\n   \r\n\r\n   protected start(): void {\r\n      this.onLoadStage_1();\r\n      this.isBooster = false;\r\n      //di chuyển tàu lên xong đợi  người chơi điều khiển\r\n      this.ship.onAwake();\r\n   }\r\n\r\n\r\n   public onLoadStage_1(): void {\r\n      for (let i = 0; i < this.stage_1.length; i++) {\r\n         let e = SimplePool.spawnT<Enemy>(PoolType.Enemy_1, this.stage_1[i].getWorldPosition().add(cc.Vec3.UP.mul(1000)), 0);\r\n         e.moveTo(this.stage_1[i].getWorldPosition(), 1, true);\r\n         this.list.push(e);\r\n         e.onInit(40);\r\n      }\r\n   }\r\n\r\n   public onLoadStage_2(): void {\r\n      //bay từ 2 bên sang\r\n      for (let i = 0; i < 14; i++) {\r\n         let e = SimplePool.spawnT<Enemy>(PoolType.Enemy_2, this.node.getWorldPosition().add(new cc.Vec3(-1000,0,0)), 0);\r\n         e.moveTo(this.stage_2[i].getWorldPosition(), 0.5, true);\r\n         this.list.push(e);\r\n         e.onInit(40);\r\n      }\r\n\r\n      for (let i = 13; i < this.stage_2.length; i++) {\r\n         let e = SimplePool.spawnT<Enemy>(PoolType.Enemy_2, this.node.getWorldPosition().add(new cc.Vec3(1000,0,0)), 0);\r\n         e.moveTo(this.stage_2[i].getWorldPosition(), 0.5, true);\r\n         this.list.push(e);\r\n         e.onInit(40);\r\n      }\r\n   }\r\n\r\n   onFinish() {\r\n      //kết thúc màn game di chuyển tàu lên thẳng phía trên\r\n      this.ship.onFinish();\r\n      //show UI end card\r\n   }\r\n\r\n   //enemy death sẽ gọi vào hàm này\r\n   //nếu ship chết thì cần viết 1 func khác để ship gọi vào\r\n   public onEnemyDeath(c: Character): void{\r\n\r\n      //remove enemy ra khỏi list\r\n      let index = this.list.indexOf(c);\r\n      if (index != -1) {\r\n         this.list.splice(index, 1);\r\n      }\r\n\r\n      //nếu kết thúc stage thì next stage\r\n      if(this.list.length == 0){\r\n         this.stage++;\r\n         switch(this.stage){\r\n            case 0:\r\n               this.onLoadStage_1();\r\n               break;\r\n            case 1:\r\n               this.onLoadStage_2();\r\n               break;\r\n            default:\r\n               //kết thúc stage thì kết thúc game\r\n               this.onFinish();\r\n               break;\r\n         }\r\n      }\r\n\r\n      //enemy đầu tiên chết sẽ tạo booster ra\r\n      if(!this.isBooster){\r\n         this.isBooster = true;\r\n         SimplePool.spawn(PoolType.Booster, c.node.getWorldPosition());\r\n      }\r\n   }\r\n\r\n}\r\n"]}